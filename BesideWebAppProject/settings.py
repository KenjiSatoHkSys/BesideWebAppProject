"""
Django settings for BesideWebAppProject project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '*****'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['besidemonitor01.herokuapp.com',   # deploy
                 '127.0.0.1',                       # local host
                 ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'BesideWebApp.apps.BesidewebappConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'BesideWebAppProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BesideWebAppProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




try:
    from .local_settings import *
except ImportError:
    pass

if not DEBUG:
    SECRET_KEY = os.environ['SECRET_KEY']

# STATIC_ROOT
# 1. collectstaticを実行するにあたって、staticファイルを集める場所
# 2. python manage.py collectstaticを実行することで、指定先フォルダに静的ファイルがコピーされます。本番環境のみで使用します。
#    https://office54.net/python/django/css-javascript-static
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# STATIC_URL
# 1. Djangoからstaticファイルにアクセスするurl。
#    /static/とすると、Djangoのappnameというアプリのtemplate上のstaticファイル{% static 'css/base.css' %}は、
#    HTML上ではhttp://localhost/static/appname/css/base.cssとレンダリングされる。
# 2. Webサーバーが静的ファイルを見に行く場所を指定します。言い換えると「配信用のフォルダ」を指定しています。
#    STATIC_URL = '/static/'
#    基本はデフォルトから変更はしません。(https://office54.net/python/django/css-javascript-static)
# 3. STATIC_URLは、ブラウザ上でアクセスするためのURLパスを示しています。
#    つまり、STATICFILES_DIRSでどんなフォルダが指定されていようと、STATIC_URLが”/static/”の場合は、ブラウザから
#    localhost:8000/static/<cssファイル名>/
#    などとすることで、CSSファイルを見ることが可能です(https://itc.tokyo/django/setup-static/)
STATIC_URL = '/static/'

# STATICFILES_DIRS
# 1. アプリケーションやそれ以外のファイルから共通した静的ファイルを利用したい場合に指定します。
#    つまり共通して利用したい静的ファイルを、指定先に保存することで、すべてのアプリケーションなどで利用できるということです。
#    デフォルトではSTATICFILES_DIRSの記載はありません。STATICFILES_DIRS指定の静的ファイルは、STATIC＿ROOTにコピーされます。
#    https://office54.net/python/django/css-javascript-static
# 2. STATICFILES_DIRSは、
#    - ローカル環境で{% static %}タグを使った際に見に行く先のフォルダ
#    - collectstaticを実行した際に見に行くフォルダ
#    です。(https://itc.tokyo/django/setup-static/)
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

